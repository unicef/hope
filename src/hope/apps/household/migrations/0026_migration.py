# Generated by Django 3.2.25 on 2025-10-23 13:42

import django.contrib.postgres.indexes
from django.contrib.postgres.operations import AddIndexConcurrently
from django.db import migrations, models
import django.db.models.functions.text


class Migration(migrations.Migration):
    dependencies = [
        ("household", "0025_migration"),
    ]

    operations = [
        AddIndexConcurrently(
            model_name="document",
            index=django.contrib.postgres.indexes.GinIndex(
                django.contrib.postgres.indexes.OpClass(
                    django.db.models.functions.text.Upper("document_number"), name="gin_trgm_ops"
                ),
                name="doc_number_upper_trgm_gin",
            ),
        ),
        AddIndexConcurrently(
            model_name="document",
            index=models.Index(fields=["type", "individual"], name="doc_type_individual_idx"),
        ),
        AddIndexConcurrently(
            model_name="household",
            index=models.Index(
                condition=models.Q(("is_removed", False), ("rdi_merge_status", "MERGED")),
                fields=["program", "unicef_id"],
                name="hh_prog_unicef_act_merg_idx",
            ),
        ),
        AddIndexConcurrently(
            model_name="household",
            index=models.Index(fields=["size", "id"], name="hh_size_id_idx"),
        ),
        AddIndexConcurrently(
            model_name="household",
            index=models.Index(
                condition=models.Q(("is_removed", False), ("rdi_merge_status", "MERGED")),
                fields=["program", "last_registration_date"],
                name="hi_prog_ltreg_act_merg_idx",
            ),
        ),
        AddIndexConcurrently(
            model_name="individual",
            index=models.Index(
                condition=models.Q(("is_removed", False), ("rdi_merge_status", "MERGED")),
                fields=["program", "id"],
                name="hi_prog_id_active_merged_idx",
            ),
        ),
        AddIndexConcurrently(
            model_name="individual",
            index=models.Index(
                condition=models.Q(("is_removed", False), ("rdi_merge_status", "MERGED")),
                fields=["program", "household"],
                name="hi_prog_hh_active_merged_idx",
            ),
        ),
        AddIndexConcurrently(
            model_name="individual",
            index=models.Index(
                condition=models.Q(
                    ("is_removed", False), ("rdi_merge_status", "MERGED"), ("sanction_list_possible_match", True)
                ),
                fields=["household"],
                name="hi_hh_sanction_possible_idx",
            ),
        ),
        AddIndexConcurrently(
            model_name="individual",
            index=models.Index(
                condition=models.Q(
                    ("is_removed", False), ("rdi_merge_status", "MERGED"), ("sanction_list_confirmed_match", True)
                ),
                fields=["household"],
                name="hi_hh_sanction_confirmed_idx",
            ),
        ),
        AddIndexConcurrently(
            model_name="individual",
            index=models.Index(
                condition=models.Q(
                    ("deduplication_golden_record_status", "DUPLICATE"),
                    ("is_removed", False),
                    ("rdi_merge_status", "MERGED"),
                ),
                fields=["household"],
                name="hi_hh_dup_idx",
            ),
        ),
        AddIndexConcurrently(
            model_name="individual",
            index=models.Index(
                condition=models.Q(("is_removed", False), ("rdi_merge_status", "MERGED")),
                fields=["household"],
                name="hi_hh_active_merged_idx",
            ),
        ),
        AddIndexConcurrently(
            model_name="individual",
            index=models.Index(
                condition=models.Q(("is_removed", False), ("rdi_merge_status", "MERGED")),
                fields=["program", "unicef_id"],
                name="hi_prog_uni_act_merg_idx",
            ),
        ),
        AddIndexConcurrently(
            model_name="individual",
            index=models.Index(
                condition=models.Q(("is_removed", False), ("rdi_merge_status", "MERGED")),
                fields=["program", "unicef_id"],
                include=("birth_date",),
                name="hi_prog_uni_act_merg_birth_idx",
            ),
        ),
    ]
