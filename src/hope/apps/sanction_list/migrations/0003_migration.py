# Generated by Django 3.2.25 on 2025-06-14 14:59

from django.db import migrations, models
import django.db.models.deletion
import strategy_field.fields


def create_default_santionlist(apps, schema_editor):
    from strategy_field.fields import fqn

    from hope.apps.sanction_list.strategies.un import UNSanctionList

    SanctionList = apps.get_model("sanction_list", "SanctionList")
    SanctionList.objects.get_or_create(
        pk=1,
        defaults={
            "name": "UN Sanction List",
            "strategy": fqn(UNSanctionList),
            "config": {"url": "https://scsanctions.un.org/resources/xml/en/consolidated.xml"},
        },
    )


class Migration(migrations.Migration):
    dependencies = [
        ("geo", "0004_migration"),
        ("sanction_list", "0002_migration"),
    ]

    operations = [
        migrations.CreateModel(
            name="SanctionList",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True, db_index=True)),
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=255)),
                ("config", models.JSONField(blank=True, default=dict)),
                ("strategy", strategy_field.fields.StrategyField(unique=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.RunPython(create_default_santionlist, migrations.RunPython.noop),
        migrations.AlterModelOptions(
            name="sanctionlistindividual",
            options={"ordering": ["-listed_on"], "verbose_name": "Individual", "verbose_name_plural": "Individuals"},
        ),
        migrations.AlterModelOptions(
            name="sanctionlistindividualaliasname",
            options={"verbose_name": "Alias", "verbose_name_plural": "Aliases"},
        ),
        migrations.AlterModelOptions(
            name="sanctionlistindividualcountries",
            options={"verbose_name": "Country", "verbose_name_plural": "Countries"},
        ),
        migrations.AlterModelOptions(
            name="sanctionlistindividualdateofbirth",
            options={"verbose_name": "Birthday"},
        ),
        migrations.AlterModelOptions(
            name="sanctionlistindividualdocument",
            options={"verbose_name": "Document", "verbose_name_plural": "Documents"},
        ),
        migrations.AlterModelOptions(
            name="sanctionlistindividualnationalities",
            options={"verbose_name": "Nationality", "verbose_name_plural": "Nationalities"},
        ),
        migrations.AlterField(
            model_name="sanctionlistindividual",
            name="listed_on",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="sanctionlistindividual",
            name="reference_number",
            field=models.CharField(max_length=50),
        ),
        migrations.AlterUniqueTogether(
            name="sanctionlistindividualaliasname",
            unique_together={("individual", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="sanctionlistindividualdateofbirth",
            unique_together={("individual", "date")},
        ),
        migrations.AlterUniqueTogether(
            name="sanctionlistindividualnationalities",
            unique_together={("individual", "nationality")},
        ),
        migrations.AddField(
            model_name="sanctionlistindividual",
            name="sanction_list",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="entries",
                to="sanction_list.sanctionlist",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="uploadedxlsxfile",
            name="selected_lists",
            field=models.ManyToManyField(to="sanction_list.SanctionList"),
        ),
        migrations.AlterUniqueTogether(
            name="sanctionlistindividual",
            unique_together={("sanction_list", "reference_number")},
        ),
    ]
