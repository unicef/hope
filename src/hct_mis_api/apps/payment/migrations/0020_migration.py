# Generated by Django 3.2.25 on 2025-02-27 20:04

from django.db import migrations, models, connection
import django.db.models.deletion
import multiselectfield.db.fields


def drop_unique_individual_delivery_mechanism_constraint_if_exists(apps, schema_editor):
    constraint_name = 'unique_individual_delivery_mechanism'
    table_name = 'payment_deliverymechanismdata'

    with connection.cursor() as cursor:
        cursor.execute(f"""
            DO $$ 
            BEGIN 
                IF EXISTS (
                    SELECT 1 FROM pg_constraint WHERE conname = '{constraint_name}'
                ) THEN
                    ALTER TABLE {table_name} DROP CONSTRAINT {constraint_name};
                END IF;
            END $$;
        """)


class Migration(migrations.Migration):

    dependencies = [
        ('geo', '0002_migration'),
        ('payment', '0019_migration'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=255, unique=True)),
                ('label', models.CharField(max_length=255)),
                ('unique_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), default=list, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryMechanismConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('required_fields', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=255), default=list, size=None)),
            ],
        ),
        migrations.CreateModel(
            name='FspNameMapping',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('external_name', models.CharField(max_length=255)),
                ('hope_name', models.CharField(max_length=255)),
                ('source', models.CharField(choices=[('Individual', 'Individual'), ('Household', 'Household'), ('Account', 'Account')], default='Account', max_length=30)),
            ],
        ),
        migrations.RunPython(drop_unique_individual_delivery_mechanism_constraint_if_exists),
        migrations.RemoveField(
            model_name='deliverymechanism',
            name='optional_fields',
        ),
        migrations.RemoveField(
            model_name='deliverymechanism',
            name='required_fields',
        ),
        migrations.RemoveField(
            model_name='deliverymechanism',
            name='unique_fields',
        ),
        migrations.RemoveField(
            model_name='deliverymechanismdata',
            name='is_valid',
        ),
        migrations.RemoveField(
            model_name='deliverymechanismdata',
            name='possible_duplicate_of',
        ),
        migrations.RemoveField(
            model_name='deliverymechanismdata',
            name='validation_errors',
        ),
        migrations.RemoveField(
            model_name='financialserviceprovider',
            name='required_fields',
        ),
        migrations.AddField(
            model_name='deliverymechanismdata',
            name='is_unique',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='financialserviceproviderxlsxtemplate',
            name='columns',
            field=multiselectfield.db.fields.MultiSelectField(choices=[('payment_id', 'Payment ID'), ('household_id', 'Household ID'), ('individual_id', 'Individual ID'), ('household_size', 'Household Size'), ('collector_name', 'Collector Name'), ('alternate_collector_full_name', 'Alternate collector Full Name'), ('alternate_collector_given_name', 'Alternate collector Given Name'), ('alternate_collector_middle_name', 'Alternate collector Middle Name'), ('alternate_collector_phone_no', 'Alternate collector phone number'), ('alternate_collector_document_numbers', 'Alternate collector Document numbers'), ('alternate_collector_sex', 'Alternate collector Gender'), ('payment_channel', 'Payment Channel'), ('fsp_name', 'FSP Name'), ('currency', 'Currency'), ('entitlement_quantity', 'Entitlement Quantity'), ('entitlement_quantity_usd', 'Entitlement Quantity USD'), ('delivered_quantity', 'Delivered Quantity'), ('delivery_date', 'Delivery Date'), ('reference_id', 'Reference id'), ('reason_for_unsuccessful_payment', 'Reason for unsuccessful payment'), ('order_number', 'Order Number'), ('token_number', 'Token Number'), ('additional_collector_name', 'Additional Collector Name'), ('additional_document_type', 'Additional Document Type'), ('additional_document_number', 'Additional Document Number'), ('registration_token', 'Registration Token'), ('status', 'Status'), ('transaction_status_blockchain_link', 'Transaction Status on the Blockchain'), ('fsp_auth_code', 'Auth Code'), ('account_data', 'Account Data')], default=['payment_id', 'household_id', 'individual_id', 'household_size', 'collector_name', 'alternate_collector_full_name', 'alternate_collector_given_name', 'alternate_collector_middle_name', 'alternate_collector_phone_no', 'alternate_collector_document_numbers', 'alternate_collector_sex', 'payment_channel', 'fsp_name', 'currency', 'entitlement_quantity', 'entitlement_quantity_usd', 'delivered_quantity', 'delivery_date', 'reference_id', 'reason_for_unsuccessful_payment', 'order_number', 'token_number', 'additional_collector_name', 'additional_document_type', 'additional_document_number', 'registration_token', 'status', 'transaction_status_blockchain_link', 'fsp_auth_code', 'account_data'], help_text='Select the columns to include in the report', max_length=1000, verbose_name='Columns'),
        ),
        migrations.AddField(
            model_name='fspnamemapping',
            name='fsp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='names_mappings', to='payment.financialserviceprovider'),
        ),
        migrations.AddField(
            model_name='deliverymechanismconfig',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='geo.country', null=True, blank=True),
        ),
        migrations.AddField(
            model_name='deliverymechanismconfig',
            name='delivery_mechanism',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='payment.deliverymechanism'),
        ),
        migrations.AddField(
            model_name='deliverymechanismconfig',
            name='fsp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='payment.financialserviceprovider'),
        ),
        migrations.AddField(
            model_name='deliverymechanism',
            name='account_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='delivery_mechanisms', to='payment.accounttype'),
        ),
        migrations.AddField(
            model_name='deliverymechanismdata',
            name='account_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='accounts', to='payment.accounttype'),
        ),
    ]
