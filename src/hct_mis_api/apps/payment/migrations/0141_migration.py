# Generated by Django 3.2.25 on 2024-07-17 13:59

from django.db import migrations, models
import django.db.models.deletion
import hct_mis_api.apps.payment.fields


def data_migration_financialserviceprovider_delivery_mechanisms(apps, schema_editor):
    FinancialServiceProvider = apps.get_model("payment", "FinancialServiceProvider")
    DeliveryMechanism = apps.get_model("payment", "DeliveryMechanism")
    dms = list(DeliveryMechanism.objects.all())

    fsps = FinancialServiceProvider.objects.exclude(delivery_mechanisms_choices__isnull=True)
    for fsp in fsps:
        fsp_dms = [dm for dm in dms if dm.name in fsp.delivery_mechanisms_choices]
        fsp.delivery_mechanisms.set(fsp_dms)


def data_migration_deliverymechanismdata_delivery_mechanism(apps, schema_editor):
    DeliveryMechanismData = apps.get_model("payment", "DeliveryMechanismData")
    DeliveryMechanism = apps.get_model("payment", "DeliveryMechanism")

    for dm in DeliveryMechanism.objects.all():
        DeliveryMechanismData.objects.filter(delivery_mechanism_choice=dm.name).update(delivery_mechanism=dm)


def data_migration_deliverymechanismperpaymentplan_delivery_mechanism(apps, schema_editor):
    DeliveryMechanismPerPaymentPlan = apps.get_model("payment", "DeliveryMechanismPerPaymentPlan")
    DeliveryMechanism = apps.get_model("payment", "DeliveryMechanism")

    for dm in DeliveryMechanism.objects.all():
        DeliveryMechanismPerPaymentPlan.objects.filter(delivery_mechanism_choice=dm.name).update(delivery_mechanism=dm)


def data_migration_fspxlsxtemplateperdeliverymechanism_delivery_mechanism(apps, schema_editor):
    FspXlsxTemplatePerDeliveryMechanism = apps.get_model("payment", "FspXlsxTemplatePerDeliveryMechanism")
    DeliveryMechanism = apps.get_model("payment", "DeliveryMechanism")

    for dm in DeliveryMechanism.objects.all():
        FspXlsxTemplatePerDeliveryMechanism.objects.filter(delivery_mechanism_choice=dm.name).update(
            delivery_mechanism=dm
        )


def data_migration_payment_delivery_type(apps, schema_editor):
    Payment = apps.get_model("payment", "Payment")
    DeliveryMechanism = apps.get_model("payment", "DeliveryMechanism")

    for dm in DeliveryMechanism.objects.all():
        Payment.objects.filter(delivery_type_choice=dm.name).update(delivery_type=dm)


def data_migration_payment_record_delivery_type(apps, schema_editor):
    PaymentRecord = apps.get_model("payment", "PaymentRecord")
    DeliveryMechanism = apps.get_model("payment", "DeliveryMechanism")

    for dm in DeliveryMechanism.objects.all():
        PaymentRecord.objects.filter(delivery_type_choice=dm.name).update(delivery_type=dm)


class Migration(migrations.Migration):

    dependencies = [
        ("payment", "0140_migration"),
    ]

    operations = [
        migrations.AlterField(
            model_name="financialserviceproviderxlsxtemplate",
            name="core_fields",
            field=hct_mis_api.apps.payment.fields.DynamicChoiceArrayField(
                base_field=models.CharField(blank=True, max_length=255), blank=True, default=list, size=None
            ),
        ),
        migrations.RenameField(
            model_name="financialserviceprovider",
            old_name="delivery_mechanisms",
            new_name="delivery_mechanisms_choices",
        ),
        migrations.AlterField(
            model_name="financialserviceprovider",
            name="delivery_mechanisms_choices",
            field=hct_mis_api.apps.account.models.HorizontalChoiceArrayField(
                base_field=models.CharField(
                    choices=[
                        ("Cardless cash withdrawal", "Cardless cash withdrawal"),
                        ("Cash", "Cash"),
                        ("Cash by FSP", "Cash by FSP"),
                        ("Cheque", "Cheque"),
                        ("Deposit to Card", "Deposit to Card"),
                        ("Mobile Money", "Mobile Money"),
                        ("Pre-paid card", "Pre-paid card"),
                        ("Referral", "Referral"),
                        ("Transfer", "Transfer"),
                        ("Transfer to Account", "Transfer to Account"),
                        ("Voucher", "Voucher"),
                        ("ATM Card", "ATM Card"),
                        ("Cash over the counter", "Cash over the counter"),
                        ("Transfer to Digital Wallet", "Transfer to Digital Wallet"),
                    ],
                    max_length=32,
                ),
                null=True,
                size=None,
            ),
        ),
        migrations.AddField(
            model_name="financialserviceprovider",
            name="delivery_mechanisms",
            field=models.ManyToManyField(to="payment.DeliveryMechanism"),
        ),
        migrations.RunPython(
            data_migration_financialserviceprovider_delivery_mechanisms,
            migrations.RunPython.noop,
        ),
        migrations.RenameField(
            model_name="deliverymechanismdata",
            old_name="delivery_mechanism",
            new_name="delivery_mechanism_choice",
        ),
        migrations.AddField(
            model_name="deliverymechanismdata",
            name="delivery_mechanism",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT, to="payment.deliverymechanism", null=True
            ),
        ),
        migrations.RunPython(
            data_migration_deliverymechanismdata_delivery_mechanism,
            migrations.RunPython.noop,
        ),
        migrations.AlterField(
            model_name="deliverymechanismdata",
            name="delivery_mechanism",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                to="payment.deliverymechanism",
            ),
        ),
        migrations.RenameField(
            model_name="deliverymechanismperpaymentplan",
            old_name="delivery_mechanism",
            new_name="delivery_mechanism_choice",
        ),
        migrations.AddField(
            model_name="deliverymechanismperpaymentplan",
            name="delivery_mechanism",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.SET_NULL, to="payment.deliverymechanism", null=True
            ),
        ),
        migrations.RunPython(
            data_migration_deliverymechanismperpaymentplan_delivery_mechanism,
            migrations.RunPython.noop,
        ),
        migrations.RenameField(
            model_name="fspxlsxtemplateperdeliverymechanism",
            old_name="delivery_mechanism",
            new_name="delivery_mechanism_choice",
        ),
        migrations.AddField(
            model_name="fspxlsxtemplateperdeliverymechanism",
            name="delivery_mechanism",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.SET_NULL, to="payment.deliverymechanism", null=True
            ),
        ),
        migrations.RunPython(
            data_migration_fspxlsxtemplateperdeliverymechanism_delivery_mechanism,
            migrations.RunPython.noop,
        ),
        migrations.AlterUniqueTogether(
            name="fspxlsxtemplateperdeliverymechanism",
            unique_together={("financial_service_provider", "delivery_mechanism")},
        ),
        migrations.RenameField(
            model_name="payment",
            old_name="delivery_type",
            new_name="delivery_type_choice",
        ),
        migrations.RenameField(
            model_name="paymentrecord",
            old_name="delivery_type",
            new_name="delivery_type_choice",
        ),
        migrations.AddField(
            model_name="payment",
            name="delivery_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.SET_NULL, to="payment.deliverymechanism", null=True
            ),
        ),
        migrations.AddField(
            model_name="paymentrecord",
            name="delivery_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.SET_NULL, to="payment.deliverymechanism", null=True
            ),
        ),
        migrations.RunPython(
            data_migration_payment_delivery_type,
            migrations.RunPython.noop,
        ),
        migrations.RunPython(
            data_migration_payment_record_delivery_type,
            migrations.RunPython.noop,
        ),
    ]
