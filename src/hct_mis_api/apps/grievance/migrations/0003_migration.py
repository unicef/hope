# Generated by Django 3.2.25 on 2024-11-07 12:18

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("contenttypes", "0002_remove_content_type_name"),
        ("grievance", "0002_migration"),
        ("program", "0001_migration"),
        ("core", "0002_migration"),
        ("payment", "0001_migration"),
        ("account", "0002_migration"),
        ("geo", "0001_migration"),
        ("household", "0002_migration"),
        ("registration_data", "0001_migration"),
    ]

    operations = [
        migrations.AddField(
            model_name="ticketpaymentverificationdetails",
            name="payment_verification",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="ticket_detail",
                to="payment.paymentverification",
            ),
        ),
        migrations.AddField(
            model_name="ticketpaymentverificationdetails",
            name="payment_verifications",
            field=models.ManyToManyField(
                related_name="ticket_details", to="payment.PaymentVerification"
            ),
        ),
        migrations.AddField(
            model_name="ticketpaymentverificationdetails",
            name="ticket",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="payment_verification_ticket_details",
                to="grievance.grievanceticket",
            ),
        ),
        migrations.AddField(
            model_name="ticketnote",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="ticket_notes",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AddField(
            model_name="ticketnote",
            name="ticket",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ticket_notes",
                to="grievance.grievanceticket",
            ),
        ),
        migrations.AddField(
            model_name="ticketnegativefeedbackdetails",
            name="household",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="negative_feedback_ticket_details",
                to="household.household",
            ),
        ),
        migrations.AddField(
            model_name="ticketnegativefeedbackdetails",
            name="individual",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="negative_feedback_ticket_details",
                to="household.individual",
            ),
        ),
        migrations.AddField(
            model_name="ticketnegativefeedbackdetails",
            name="ticket",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="negative_feedback_ticket_details",
                to="grievance.grievanceticket",
            ),
        ),
        migrations.AddField(
            model_name="ticketneedsadjudicationdetails",
            name="golden_records_individual",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="ticket_golden_records",
                to="household.individual",
            ),
        ),
        migrations.AddField(
            model_name="ticketneedsadjudicationdetails",
            name="possible_duplicate",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="household.individual",
            ),
        ),
        migrations.AddField(
            model_name="ticketneedsadjudicationdetails",
            name="possible_duplicates",
            field=models.ManyToManyField(
                related_name="ticket_duplicates", to="household.Individual"
            ),
        ),
        migrations.AddField(
            model_name="ticketneedsadjudicationdetails",
            name="selected_distinct",
            field=models.ManyToManyField(
                related_name="selected_distinct", to="household.Individual"
            ),
        ),
        migrations.AddField(
            model_name="ticketneedsadjudicationdetails",
            name="selected_individual",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="+",
                to="household.individual",
            ),
        ),
        migrations.AddField(
            model_name="ticketneedsadjudicationdetails",
            name="selected_individuals",
            field=models.ManyToManyField(
                related_name="ticket_selected", to="household.Individual"
            ),
        ),
        migrations.AddField(
            model_name="ticketneedsadjudicationdetails",
            name="ticket",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="needs_adjudication_ticket_details",
                to="grievance.grievanceticket",
            ),
        ),
        migrations.AddField(
            model_name="ticketindividualdataupdatedetails",
            name="individual",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="individual_data_update_ticket_details",
                to="household.individual",
            ),
        ),
        migrations.AddField(
            model_name="ticketindividualdataupdatedetails",
            name="ticket",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="individual_data_update_ticket_details",
                to="grievance.grievanceticket",
            ),
        ),
        migrations.AddField(
            model_name="tickethouseholddataupdatedetails",
            name="household",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="household_data_update_ticket_details",
                to="household.household",
            ),
        ),
        migrations.AddField(
            model_name="tickethouseholddataupdatedetails",
            name="ticket",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="household_data_update_ticket_details",
                to="grievance.grievanceticket",
            ),
        ),
        migrations.AddField(
            model_name="ticketdeleteindividualdetails",
            name="individual",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="delete_individual_ticket_details",
                to="household.individual",
            ),
        ),
        migrations.AddField(
            model_name="ticketdeleteindividualdetails",
            name="ticket",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="delete_individual_ticket_details",
                to="grievance.grievanceticket",
            ),
        ),
        migrations.AddField(
            model_name="ticketdeletehouseholddetails",
            name="household",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="delete_household_ticket_details",
                to="household.household",
            ),
        ),
        migrations.AddField(
            model_name="ticketdeletehouseholddetails",
            name="reason_household",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="household.household",
            ),
        ),
        migrations.AddField(
            model_name="ticketdeletehouseholddetails",
            name="ticket",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="delete_household_ticket_details",
                to="grievance.grievanceticket",
            ),
        ),
        migrations.AddField(
            model_name="ticketcomplaintdetails",
            name="household",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="complaint_ticket_details",
                to="household.household",
            ),
        ),
        migrations.AddField(
            model_name="ticketcomplaintdetails",
            name="individual",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="complaint_ticket_details",
                to="household.individual",
            ),
        ),
        migrations.AddField(
            model_name="ticketcomplaintdetails",
            name="payment_content_type",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="contenttypes.contenttype",
            ),
        ),
        migrations.AddField(
            model_name="ticketcomplaintdetails",
            name="ticket",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="complaint_ticket_details",
                to="grievance.grievanceticket",
            ),
        ),
        migrations.AddField(
            model_name="ticketaddindividualdetails",
            name="household",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="add_individual_ticket_details",
                to="household.household",
            ),
        ),
        migrations.AddField(
            model_name="ticketaddindividualdetails",
            name="ticket",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="add_individual_ticket_details",
                to="grievance.grievanceticket",
            ),
        ),
        migrations.AddField(
            model_name="grievanceticketthrough",
            name="linked_ticket",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="grievance_tickets_through_linked",
                to="grievance.grievanceticket",
            ),
        ),
        migrations.AddField(
            model_name="grievanceticketthrough",
            name="main_ticket",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="grievance_tickets_through_main",
                to="grievance.grievanceticket",
            ),
        ),
        migrations.AddField(
            model_name="grievanceticket",
            name="admin2",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="geo.area",
            ),
        ),
        migrations.AddField(
            model_name="grievanceticket",
            name="assigned_to",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="assigned_tickets",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Assigned to",
            ),
        ),
        migrations.AddField(
            model_name="grievanceticket",
            name="business_area",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="tickets",
                to="core.businessarea",
            ),
        ),
        migrations.AddField(
            model_name="grievanceticket",
            name="copied_from",
            field=models.ForeignKey(
                blank=True,
                help_text="If this object was copied from another, this field will contain the object it was copied from.",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="copied_to",
                to="grievance.grievanceticket",
            ),
        ),
        migrations.AddField(
            model_name="grievanceticket",
            name="created_by",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="created_tickets",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created by",
            ),
        ),
        migrations.AddField(
            model_name="grievanceticket",
            name="linked_tickets",
            field=models.ManyToManyField(
                related_name="_grievance_grievanceticket_linked_tickets_+",
                through="grievance.GrievanceTicketThrough",
                to="grievance.GrievanceTicket",
            ),
        ),
        migrations.AddField(
            model_name="grievanceticket",
            name="partner",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="account.partner",
            ),
        ),
        migrations.AddField(
            model_name="grievanceticket",
            name="programs",
            field=models.ManyToManyField(
                blank=True, related_name="grievance_tickets", to="program.Program"
            ),
        ),
        migrations.AddField(
            model_name="grievanceticket",
            name="registration_data_import",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="registration_data.registrationdataimport",
            ),
        ),
        migrations.AddField(
            model_name="grievancedocument",
            name="created_by",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="grievancedocument",
            name="grievance_ticket",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="support_documents",
                to="grievance.grievanceticket",
            ),
        ),
        migrations.AddConstraint(
            model_name="grievanceticketthrough",
            constraint=models.UniqueConstraint(
                fields=("main_ticket", "linked_ticket"),
                name="unique_main_linked_ticket",
            ),
        ),
        migrations.RunSQL(
            sql="ALTER TABLE grievance_grievanceticket ADD unicef_id_index SERIAL",
            reverse_sql="ALTER TABLE grievance_grievanceticket DROP unicef_id_index",
        ),
        migrations.RunSQL(
            sql="\n            CREATE OR REPLACE FUNCTION create_gt_unicef_id() RETURNS trigger\n                LANGUAGE plpgsql\n                AS $$\n            begin\n              NEW.unicef_id := format('GRV-%s', trim(to_char(NEW.unicef_id_index,'0000000')));\n              return NEW;\n            end\n            $$;\n            ",
        ),
        migrations.RunSQL(
            sql="""
        CREATE TRIGGER create_gt_unicef_id
        BEFORE INSERT ON grievance_grievanceticket FOR EACH ROW EXECUTE PROCEDURE create_gt_unicef_id();                                                                               
        """
        ),
    ]
