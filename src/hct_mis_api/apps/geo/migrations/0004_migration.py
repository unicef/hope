# Generated by Django 2.2.16 on 2021-09-16 17:14

from django.db import migrations
from django.db.models import ForeignKey


# UPDATE table SET columnB = columnA;
class DeferredForwardRunSQL(migrations.RunSQL):
    def database_forwards(self, app_label, schema_editor, from_state, to_state):
        schema_editor.deferred_sql.append(self.sql[0])


MODELS = (
    "core.CountryCodeMap",
    "household.Household",
    "household.DocumentType",
    "household.Agency",
    "sanction_list.SanctionListIndividualCountries",
    "sanction_list.SanctionListIndividualNationalities",
    "sanction_list.SanctionListIndividualDocument",
    "sanction_list.SanctionListIndividual",
)


def copy_country_data(apps, schema_editor):
    Country = apps.get_model("geo", "Country")

    countries = {}
    for model in MODELS:
        Model = apps.get_model(*model.split("."))
        try:
            for field in Model._meta.get_fields():
                if type(field) == ForeignKey:
                    opts = field.related_model._meta
                    if opts.app_label == "geo" and opts.model_name == "country":
                        old_field_name = field.name[:-4]
                        geo_name = field.name
                        records = Model.objects.all()
                        for record in records:
                            source = getattr(record, old_field_name).code
                            if source:
                                if source not in countries:
                                    countries[source] = Country.objects.get(iso_code2=source)
                                setattr(record, geo_name, countries[source])
                        Model.objects.bulk_update(records, [geo_name])
        except Exception:
            raise


def empty_reverse(apps, schema_editor):
    pass


class Migration(migrations.Migration):
    dependencies = [
        ("geo", "0003_migration"),
        ("core", "0041_migration"),
        ("household", "0003_migration_squashed_0086_migration"),
        ("sanction_list", "0010_migration"),
    ]

    operations = [
        migrations.RunPython(copy_country_data, empty_reverse),
    ]
