# Generated by Django 3.2.19 on 2023-06-08 19:34

import concurrency.fields
from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import model_utils.fields
import uuid

from hct_mis_api.apps.payment.delivery_mechanisms import DeliveryMechanismChoices


def delivery_type_labels_to_valid_choices(apps, schema_editor):
    CashPlan = apps.get_model("program", "CashPlan")
    delivery_type_choices_dict = {value: key for key, value in DeliveryMechanismChoices.DELIVERY_TYPE_CHOICES}
    all_cash_plans = CashPlan.objects.all()
    for cash_plan in all_cash_plans:
        cash_plan.delivery_type = delivery_type_choices_dict.get(
            cash_plan.delivery_type, DeliveryMechanismChoices.DELIVERY_TYPE_CASH
        )
    CashPlan.objects.bulk_update(all_cash_plans, ["delivery_type"])

def empty_reverse(apps, schema_editor):
    pass

def populate_existing_cash_plan_rates(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_migration_squashed_0006_migration'),
        ('payment', '0002_migration_squashed_0003_migration'),
        ('targeting', '0001_migration'),
        ('program', '0001_migration'),
    ]

    operations = [
        migrations.AddField(
            model_name='cashplan',
            name='target_population',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cash_plans', to='targeting.targetpopulation'),
        ),
        migrations.AlterUniqueTogether(
            name='program',
            unique_together={('name', 'business_area')},
        ),
        migrations.DeleteModel(
            name='CashPlan',
        ),
        migrations.AlterField(
            model_name='program',
            name='scope',
            field=models.CharField(choices=[('FOR_PARTNERS', 'For partners'), ('UNICEF', 'Unicef')], max_length=50),
        ),
        migrations.AddField(
            model_name='program',
            name='last_sync_at',
            field=models.DateTimeField(null=True),
        ),
        migrations.RemoveField(
            model_name='program',
            name='program_ca_id',
        ),
        migrations.AddField(
            model_name='program',
            name='ca_hash_id',
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='program',
            name='ca_id',
            field=models.CharField(max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='program',
            name='individual_data_needed',
            field=models.BooleanField(default=False, help_text='\n        This boolean decides whether the target population sync will send\n        all individuals of a household thats part of the population or only\n        the relevant ones (collectors etc.)'),
        ),
        migrations.AlterField(
            model_name='program',
            name='sector',
            field=models.CharField(choices=[('CHILD_PROTECTION', 'Child Protection'), ('EDUCATION', 'Education'), ('HEALTH', 'Health'), ('MULTI_PURPOSE', 'Multi Purpose'), ('NUTRITION', 'Nutrition'), ('SOCIAL_POLICY', 'Social Policy'), ('WASH', 'WASH')], max_length=50),
        ),
        migrations.CreateModel(
            name='CashPlan',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ca_id', models.CharField(max_length=255, null=True)),
                ('ca_hash_id', models.UUIDField(null=True, unique=True)),
                ('status', models.CharField(choices=[('Distribution Completed', 'Distribution Completed'), ('Distribution Completed with Errors', 'Distribution Completed with Errors'), ('Transaction Completed', 'Transaction Completed'), ('Transaction Completed with Errors', 'Transaction Completed with Errors')], max_length=255)),
                ('status_date', models.DateTimeField()),
                ('name', models.CharField(max_length=255)),
                ('distribution_level', models.CharField(max_length=255)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('dispersion_date', models.DateTimeField()),
                ('coverage_duration', models.PositiveIntegerField()),
                ('coverage_unit', models.CharField(max_length=255)),
                ('comments', models.CharField(max_length=255, null=True)),
                ('delivery_type', models.CharField(blank=True, choices=[('CASH', 'Cash'), ('DEPOSIT_TO_CARD', 'Deposit to Card'), ('TRANSFER', 'Transfer')], max_length=20)),
                ('assistance_measurement', models.CharField(max_length=255)),
                ('assistance_through', models.CharField(max_length=255)),
                ('vision_id', models.CharField(max_length=255)),
                ('funds_commitment', models.CharField(max_length=255)),
                ('down_payment', models.CharField(max_length=255)),
                ('validation_alerts_count', models.IntegerField()),
                ('total_persons_covered', models.IntegerField()),
                ('total_persons_covered_revised', models.IntegerField()),
                ('total_entitled_quantity', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('total_entitled_quantity_revised', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('total_delivered_quantity', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('total_undelivered_quantity', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('business_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.businessarea')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cash_plans', to='program.program')),
                ('verification_status', models.CharField(choices=[('PENDING', 'Pending'), ('ACTIVE', 'Active'), ('FINISHED', 'Finished')], default='PENDING', max_length=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RunPython(delivery_type_labels_to_valid_choices, empty_reverse),
        migrations.AlterModelOptions(
            name='cashplan',
            options={'verbose_name': 'Cash Plan'},
        ),
        migrations.AlterModelOptions(
            name='program',
            options={'verbose_name': 'Programme'},
        ),
        migrations.AddField(
            model_name='program',
            name='is_removed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='program',
            name='version',
            field=concurrency.fields.IntegerVersionField(default=0, help_text='record revision number'),
        ),
        migrations.AddField(
            model_name='cashplan',
            name='exchange_rate',
            field=models.DecimalField(blank=True, decimal_places=8, max_digits=12, null=True),
        ),
        migrations.RunPython(populate_existing_cash_plan_rates, empty_reverse),
        migrations.AlterField(
            model_name='program',
            name='last_sync_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
    ]
