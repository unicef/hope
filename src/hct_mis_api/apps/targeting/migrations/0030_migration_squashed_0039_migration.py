# Generated by Django 3.2.24 on 2024-02-16 06:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion

from collections import defaultdict


def remove_duplicate_household_selections(apps, schema_editor):
    HouseholdSelectionModel = apps.get_model("targeting", "HouseholdSelection")

    subquery = (
        HouseholdSelectionModel.objects.filter(
            household=models.OuterRef("household"), target_population=models.OuterRef("target_population")
        )
        .values("household", "target_population")
        .annotate(duplicates_count=models.Count("*"))
    )

    duplicates = (
        HouseholdSelectionModel.objects.annotate(duplicates_count=models.Subquery(subquery.values("duplicates_count")))
        .values("household", "target_population", "duplicates_count", "id")
        .filter(duplicates_count__gt=1, target_population__status="LOCKED")
    )

    groups = defaultdict(list)
    for row in duplicates:
        key = (row["household"], row["target_population"])
        groups[key].append(row["id"])

    for ids in groups.values():
        for id in ids[1:]:
            HouseholdSelectionModel.objects.get(id=id).delete()


def update_status(apps, schema_editor):
    TargetPopulation = apps.get_model("targeting", "TargetPopulation")
    TargetPopulation.objects.filter(status="DRAFT").update(status="OPEN")


def reverse_update_status(apps, schema_editor):
    TargetPopulation = apps.get_model("targeting", "TargetPopulation")
    TargetPopulation.objects.filter(status="OPEN").update(status="DRAFT")


class Migration(migrations.Migration):

    replaces = [('targeting', '0030_migration'), ('targeting', '0031_migration'), ('targeting', '0032_migration'), ('targeting', '0033_migration'), ('targeting', '0034_migration'), ('targeting', '0035_migration'), ('targeting', '0036_migration'), ('targeting', '0037_migration'), ('targeting', '0038_migration'), ('targeting', '0039_migration')]

    dependencies = [
        ('steficon', '0008_reset_id_squashed_0010_migration'),
        ('household', '0119_migration'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0044_migration_squashed_0057_migration'),
        ('targeting', '0029_migration'),
    ]

    operations = [
        migrations.AddField(
            model_name='targetpopulation',
            name='steficon_rule',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='target_populations', to='steficon.rulecommit'),
        ),
        migrations.AlterField(
            model_name='targetingcriteriarulefilter',
            name='arguments',
            field=models.JSONField(help_text='\n            Array of arguments\n            '),
        ),
        migrations.AlterField(
            model_name='targetingindividualblockrulefilter',
            name='arguments',
            field=models.JSONField(help_text='\n            Array of arguments\n            '),
        ),
        migrations.AlterModelOptions(
            name='householdselection',
            options={'verbose_name': 'Household Selection'},
        ),
        migrations.RunPython(remove_duplicate_household_selections),
        migrations.AlterUniqueTogether(
            name='householdselection',
            unique_together={('household', 'target_population')},
        ),
        migrations.RenameField(
            model_name='targetpopulation',
            old_name='candidate_list_targeting_criteria',
            new_name='targeting_criteria',
        ),
        migrations.RenameField(
            model_name='targetpopulation',
            old_name='final_list_total_households',
            new_name='total_households_count',
        ),
        migrations.RenameField(
            model_name='targetpopulation',
            old_name='final_list_total_individuals',
            new_name='total_individuals_count',
        ),
        migrations.RemoveField(
            model_name='householdselection',
            name='final',
        ),
        migrations.RemoveField(
            model_name='targetpopulation',
            name='candidate_list_total_households',
        ),
        migrations.RemoveField(
            model_name='targetpopulation',
            name='candidate_list_total_individuals',
        ),
        migrations.RemoveField(
            model_name='targetpopulation',
            name='final_list_targeting_criteria',
        ),
        migrations.RemoveField(
            model_name='targetpopulation',
            name='selection_computation_metadata',
        ),
        migrations.AddField(
            model_name='targetpopulation',
            name='adult_female_count',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='targetpopulation',
            name='adult_male_count',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='targetpopulation',
            name='build_status',
            field=models.CharField(choices=[('PENDING', 'Pending'), ('BUILDING', 'Building'), ('FAILED', 'Failed'), ('OK', 'Ok')], db_index=True, default='PENDING', max_length=256),
        ),
        migrations.AddField(
            model_name='targetpopulation',
            name='built_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='targetpopulation',
            name='child_female_count',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='targetpopulation',
            name='child_male_count',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='householdselection',
            name='vulnerability_score',
            field=models.DecimalField(blank=True, decimal_places=3, help_text='Written by Steficon', max_digits=6, null=True),
        ),
        migrations.AlterField(
            model_name='targetpopulation',
            name='changed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='changed_target_populations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='targetpopulation',
            name='status',
            field=models.CharField(choices=[('OPEN', 'Open'), ('LOCKED', 'Locked'), ('STEFICON_WAIT', 'Waiting for Rule Engine'), ('STEFICON_RUN', 'Rule Engine Running'), ('STEFICON_COMPLETED', 'Rule Engine Completed'), ('STEFICON_ERROR', 'Rule Engine Errored'), ('PROCESSING', 'Processing'), ('READY_FOR_CASH_ASSIST', 'Ready for cash assist')], db_index=True, default='OPEN', max_length=256),
        ),
        migrations.AlterField(
            model_name='householdselection',
            name='vulnerability_score',
            field=models.DecimalField(blank=True, db_index=True, decimal_places=3, help_text='Written by Steficon', max_digits=6, null=True),
        ),
        migrations.RenameField(
            model_name='targetingcriteriarulefilter',
            old_name='comparision_method',
            new_name='comparison_method',
        ),
        migrations.RenameField(
            model_name='targetingindividualblockrulefilter',
            old_name='comparision_method',
            new_name='comparison_method',
        ),
        migrations.AlterField(
            model_name='targetpopulation',
            name='targeting_criteria',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='target_population', to='targeting.targetingcriteria'),
        ),
        migrations.RunPython(update_status, reverse_update_status),
        migrations.AddField(
            model_name='targetpopulation',
            name='storage_file',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.storagefile'),
        ),
        migrations.AlterField(
            model_name='targetpopulation',
            name='status',
            field=models.CharField(choices=[('OPEN', 'Open'), ('LOCKED', 'Locked'), ('STEFICON_WAIT', 'Waiting for Rule Engine'), ('STEFICON_RUN', 'Rule Engine Running'), ('STEFICON_COMPLETED', 'Rule Engine Completed'), ('STEFICON_ERROR', 'Rule Engine Errored'), ('PROCESSING', 'Processing'), ('READY', 'Ready'), ('READY_FOR_CASH_ASSIST', 'Ready for cash assist'), ('READY_FOR_PAYMENT_MODULE', 'Ready for payment module'), ('ASSIGNED', 'Assigned')], db_index=True, default='OPEN', max_length=256),
        ),
        migrations.AlterField(
            model_name='targetpopulation',
            name='status',
            field=models.CharField(choices=[('OPEN', 'Open'), ('LOCKED', 'Locked'), ('STEFICON_WAIT', 'Waiting for Rule Engine'), ('STEFICON_RUN', 'Rule Engine Running'), ('STEFICON_COMPLETED', 'Rule Engine Completed'), ('STEFICON_ERROR', 'Rule Engine Errored'), ('PROCESSING', 'Processing'), ('READY_FOR_CASH_ASSIST', 'Ready for cash assist'), ('READY_FOR_PAYMENT_MODULE', 'Ready for payment module'), ('ASSIGNED', 'Assigned')], db_index=True, default='OPEN', max_length=256),
        ),
        migrations.AlterField(
            model_name='targetpopulation',
            name='status',
            field=models.CharField(choices=[('OPEN', 'Open'), ('LOCKED', 'Locked'), ('STEFICON_WAIT', 'Waiting for Rule Engine'), ('STEFICON_RUN', 'Rule Engine Running'), ('STEFICON_COMPLETED', 'Rule Engine Completed'), ('STEFICON_ERROR', 'Rule Engine Errored'), ('PROCESSING', 'Processing'), ('SENDING_TO_CASH_ASSIST', 'Sending to Cash Assist'), ('READY_FOR_CASH_ASSIST', 'Ready for cash assist'), ('READY_FOR_PAYMENT_MODULE', 'Ready for payment module'), ('ASSIGNED', 'Assigned')], db_index=True, default='OPEN', max_length=256),
        ),
        migrations.AddField(
            model_name='targetingcriteria',
            name='flag_exclude_if_active_adjudication_ticket',
            field=models.BooleanField(default=False, help_text='Exclude households with individuals (members or collectors) that have active adjudication ticket(s).'),
        ),
        migrations.AddField(
            model_name='targetingcriteria',
            name='flag_exclude_if_on_sanction_list',
            field=models.BooleanField(default=False, help_text='Exclude households with individuals (members or collectors) on sanction list.'),
        ),
    ]
