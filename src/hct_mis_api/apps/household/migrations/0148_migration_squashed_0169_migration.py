# Generated by Django 3.2.24 on 2024-02-16 05:03

from django.db import migrations, models
from django.db.models import Count
import django.utils.timezone
import model_utils.fields
import phonenumber_field.modelfields
from hct_mis_api.apps.household.models import ROLE_ALTERNATE


def update_individuals_with_multiple_roles(apps, schema_editor) -> None:
    IndividualRoleInHousehold = apps.get_model('household', 'IndividualRoleInHousehold')
    multiple_roles_within_household_individual = (
        IndividualRoleInHousehold.objects.values("household", "individual")
        .annotate(Count("id"))
        .order_by()
        .filter(id__count__gt=1)
    )
    for household_individual_pair in multiple_roles_within_household_individual:
        IndividualRoleInHousehold.objects.filter(
            household=household_individual_pair["household"],
            individual=household_individual_pair["individual"],
            role=ROLE_ALTERNATE,
        ).delete()


def update_individual_relationship_typo(apps, schema_editor):
    # old name is 'GRANDDAUGHER_GRANDSON' new -> 'GRANDDAUGHTER_GRANDSON'
    Individual = apps.get_model("household", "Individual")
    Individual.objects.filter(relationship="GRANDDAUGHER_GRANDSON").update(relationship="GRANDDAUGHTER_GRANDSON")




class Migration(migrations.Migration):

    replaces = [('household', '0148_migration'), ('household', '0149_migration'), ('household', '0150_migration'), ('household', '0151_migration'), ('household', '0152_migration'), ('household', '0153_migration'), ('household', '0154_migration'), ('household', '0155_migration'), ('household', '0156_migration'), ('household', '0157_migration'), ('household', '0158_migration'), ('household', '0159_migration'), ('household', '0160_migration'), ('household', '0161_migration'), ('household', '0162_migration'), ('household', '0163_migration'), ('household', '0164_migration'), ('household', '0165_migration'), ('household', '0166_migration'), ('household', '0167_migration'), ('household', '0168_migration'), ('household', '0169_migration')]

    dependencies = [
        ('household', '0147_migration'),
        ('core', '0070_migration'),
        ('program', '0039_migration'),
    ]

    operations = [
        migrations.AlterField(
            model_name='individual',
            name='relationship',
            field=models.CharField(blank=True, choices=[('UNKNOWN', 'Unknown'), ('AUNT_UNCLE', 'Aunt / Uncle'), ('BROTHER_SISTER', 'Brother / Sister'), ('COUSIN', 'Cousin'), ('DAUGHTERINLAW_SONINLAW', 'Daughter-in-law / Son-in-law'), ('GRANDDAUGHER_GRANDSON', 'Granddaughter / Grandson'), ('GRANDMOTHER_GRANDFATHER', 'Grandmother / Grandfather'), ('HEAD', 'Head of household (self)'), ('MOTHER_FATHER', 'Mother / Father'), ('MOTHERINLAW_FATHERINLAW', 'Mother-in-law / Father-in-law'), ('NEPHEW_NIECE', 'Nephew / Niece'), ('NON_BENEFICIARY', 'Not a Family Member. Can only act as a recipient.'), ('OTHER', 'Other'), ('SISTERINLAW_BROTHERINLAW', 'Sister-in-law / Brother-in-law'), ('SON_DAUGHTER', 'Son / Daughter'), ('WIFE_HUSBAND', 'Wife / Husband'), ('FOSTER_CHILD', 'Foster child'), ('FREE_UNION', 'Free union')], help_text='This represents the MEMBER relationship. can be blank\n            as well if household is null!', max_length=255),
        ),
        migrations.RunPython(update_individuals_with_multiple_roles, migrations.RunPython.noop),
        migrations.AlterUniqueTogether(
            name='individualroleinhousehold',
            unique_together={('role', 'household'), ('household', 'individual')},
        ),
        migrations.AlterField(
            model_name='document',
            name='expiry_date',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='individual',
            name='relationship',
            field=models.CharField(blank=True, choices=[('UNKNOWN', 'Unknown'), ('AUNT_UNCLE', 'Aunt / Uncle'), ('BROTHER_SISTER', 'Brother / Sister'), ('COUSIN', 'Cousin'), ('DAUGHTERINLAW_SONINLAW', 'Daughter-in-law / Son-in-law'), ('GRANDDAUGHTER_GRANDSON', 'Granddaughter / Grandson'), ('GRANDMOTHER_GRANDFATHER', 'Grandmother / Grandfather'), ('HEAD', 'Head of household (self)'), ('MOTHER_FATHER', 'Mother / Father'), ('MOTHERINLAW_FATHERINLAW', 'Mother-in-law / Father-in-law'), ('NEPHEW_NIECE', 'Nephew / Niece'), ('NON_BENEFICIARY', 'Not a Family Member. Can only act as a recipient.'), ('OTHER', 'Other'), ('SISTERINLAW_BROTHERINLAW', 'Sister-in-law / Brother-in-law'), ('SON_DAUGHTER', 'Son / Daughter'), ('WIFE_HUSBAND', 'Wife / Husband'), ('FOSTER_CHILD', 'Foster child'), ('FREE_UNION', 'Free union')], help_text='This represents the MEMBER relationship. can be blank\n            as well if household is null!', max_length=255),
        ),
        migrations.RunPython(update_individual_relationship_typo, migrations.RunPython.noop),
        migrations.AddField(
            model_name='individual',
            name='age_at_registration',
            field=models.PositiveSmallIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='household',
            name='registration_id',
            field=models.IntegerField(blank=True, null=True, verbose_name='Registration ID (Aurora)'),
        ),
        migrations.AddField(
            model_name='individual',
            name='registration_id',
            field=models.IntegerField(blank=True, null=True, verbose_name='Registration ID (Aurora)'),
        ),
        migrations.AlterField(
            model_name='individual',
            name='relationship',
            field=models.CharField(blank=True, choices=[('UNKNOWN', 'Unknown'), ('AUNT_UNCLE', 'Aunt / Uncle'), ('BROTHER_SISTER', 'Brother / Sister'), ('COUSIN', 'Cousin'), ('DAUGHTERINLAW_SONINLAW', 'Daughter-in-law / Son-in-law'), ('GRANDDAUGHER_GRANDSON', 'Granddaughter / Grandson'), ('GRANDMOTHER_GRANDFATHER', 'Grandmother / Grandfather'), ('HEAD', 'Head of household (self)'), ('MOTHER_FATHER', 'Mother / Father'), ('MOTHERINLAW_FATHERINLAW', 'Mother-in-law / Father-in-law'), ('NEPHEW_NIECE', 'Nephew / Niece'), ('NON_BENEFICIARY', 'Not a Family Member. Can only act as a recipient.'), ('OTHER', 'Other'), ('SISTERINLAW_BROTHERINLAW', 'Sister-in-law / Brother-in-law'), ('SON_DAUGHTER', 'Son / Daughter'), ('WIFE_HUSBAND', 'Wife / Husband'), ('FOSTER_CHILD', 'Foster child'), ('FREE_UNION', 'Free union')], help_text='This represents the MEMBER relationship. can be blank\n            as well if household is null!', max_length=255),
        ),
        migrations.CreateModel(
            name='HouseholdCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unicef_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IndividualCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unicef_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='bankaccountinfo',
            name='copied_from',
            field=models.ForeignKey(blank=True, help_text='If this object was copied from another, this field will contain the object it was copied from.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='copied_to', to='household.bankaccountinfo'),
        ),
        migrations.AddField(
            model_name='bankaccountinfo',
            name='is_migration_handled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='bankaccountinfo',
            name='is_original',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='document',
            name='copied_from',
            field=models.ForeignKey(blank=True, help_text='If this object was copied from another, this field will contain the object it was copied from.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='copied_to', to='household.document'),
        ),
        migrations.AddField(
            model_name='document',
            name='is_migration_handled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='document',
            name='is_original',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='document',
            name='program',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='program.program'),
        ),
        migrations.AddField(
            model_name='entitlementcard',
            name='is_original',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='household',
            name='copied_from',
            field=models.ForeignKey(blank=True, help_text='If this household was copied from another household, this field will contain the household it was copied from.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='copied_to', to='household.household'),
        ),
        migrations.AddField(
            model_name='household',
            name='is_migration_handled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='household',
            name='is_original',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='household',
            name='origin_unicef_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='household',
            name='program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='program.program'),
        ),
        migrations.AddField(
            model_name='individual',
            name='copied_from',
            field=models.ForeignKey(blank=True, help_text='If this individual was copied from another individual, this field will contain the individual it was copied from.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='copied_to', to='household.individual'),
        ),
        migrations.AddField(
            model_name='individual',
            name='is_migration_handled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='individual',
            name='is_original',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='individual',
            name='origin_unicef_id',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='individual',
            name='program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='individuals', to='program.program'),
        ),
        migrations.AddField(
            model_name='individualidentity',
            name='copied_from',
            field=models.ForeignKey(blank=True, help_text='If this object was copied from another, this field will contain the object it was copied from.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='copied_to', to='household.individualidentity'),
        ),
        migrations.AddField(
            model_name='individualidentity',
            name='created',
            field=model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created'),
        ),
        migrations.AddField(
            model_name='individualidentity',
            name='is_migration_handled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='individualidentity',
            name='is_original',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='individualidentity',
            name='is_removed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='individualidentity',
            name='modified',
            field=model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified'),
        ),
        migrations.AddField(
            model_name='individualroleinhousehold',
            name='copied_from',
            field=models.ForeignKey(blank=True, help_text='If this object was copied from another, this field will contain the object it was copied from.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='copied_to', to='household.individualroleinhousehold'),
        ),
        migrations.AddField(
            model_name='individualroleinhousehold',
            name='is_migration_handled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='individualroleinhousehold',
            name='is_original',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='individualroleinhousehold',
            name='is_removed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='household',
            name='household_collection',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='households', to='household.householdcollection'),
        ),
        migrations.AddField(
            model_name='individual',
            name='individual_collection',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='individuals', to='household.individualcollection'),
        ),
        migrations.AddField(
            model_name='household',
            name='is_recalculated_group_ages',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='individual',
            name='preferred_language',
            field=models.CharField(blank=True, choices=[('en-us', 'English | English'), ('ar-ae', ' | عربيArabic'), ('cs-cz', 'čeština | Czech'), ('de-de', 'Deutsch'), ('es-es', 'Español | Spanish'), ('fr-fr', 'Français | French'), ('hu-hu', 'Magyar | Hungarian'), ('it-it', 'Italiano'), ('pl-pl', 'Polskie | Polish'), ('pt-pt', 'Português'), ('ro-ro', 'Română'), ('ru-ru', 'Русский | Russian'), ('si-si', 'සිංහල | Sinhala'), ('ta-ta', 'தமிழ் | Tamil'), ('uk-ua', 'український | Ukrainian'), ('hi-hi', 'हिंदी')], max_length=6, null=True),
        ),
        migrations.AddField(
            model_name='individual',
            name='payment_delivery_phone_no',
            field=phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None),
        ),
        migrations.RunSQL(
            sql='ALTER TABLE household_householdcollection ADD unicef_id_index SERIAL',
        ),
        migrations.RunSQL(
            sql="\n        CREATE OR REPLACE FUNCTION create_hhc_unicef_id() RETURNS trigger\n            LANGUAGE plpgsql\n            AS $$\n        begin\n          NEW.unicef_id := format('HHC-%s', trim(replace(to_char(NEW.unicef_id_index,'0000,0000'),',','.')));\n          return NEW;\n        end\n        $$;\n        ",
        ),
        migrations.RunSQL(
            sql="UPDATE household_householdcollection SET unicef_id = format('HHC-%s' ,trim(replace(to_char(unicef_id_index,'0000,0000'),',','.')))",
        ),
        migrations.RunSQL(
            sql='ALTER TABLE household_individualcollection ADD unicef_id_index SERIAL',
        ),
        migrations.RunSQL(
            sql="\n        CREATE OR REPLACE FUNCTION create_indc_unicef_id() RETURNS trigger\n            LANGUAGE plpgsql\n            AS $$\n        begin\n          NEW.unicef_id := format('INDC-%s', trim(replace(to_char(NEW.unicef_id_index,'0000,0000'),',','.')));\n          return NEW;\n        end\n        $$;\n        ",
        ),
        migrations.RunSQL(
            sql="UPDATE household_individualcollection SET unicef_id = format('INDC-%s' ,trim(replace(to_char(unicef_id_index,'0000,0000'),',','.')))",
        ),
        migrations.AddField(
            model_name='household',
            name='migrated_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='individual',
            name='migrated_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='individualroleinhousehold',
            name='migrated_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.RunSQL(
            sql="\n        CREATE OR REPLACE FUNCTION create_hh_unicef_id() RETURNS trigger\n            LANGUAGE plpgsql\n            AS $$\n        begin\n            IF NEW.unicef_id IS NULL THEN\n                NEW.unicef_id := format('HH-%s-%s',TO_CHAR(NEW.first_registration_date, 'yy'), trim(replace(to_char(NEW.unicef_id_index,'0000,0000'),',','.')));\n            END IF;\n            return NEW;\n        end\n        $$;\n        ",
            reverse_sql='',
        ),
        migrations.RunSQL(
            sql="\n        CREATE OR REPLACE FUNCTION create_ii_unicef_id() RETURNS trigger\n            LANGUAGE plpgsql\n            AS $$\n        begin \n            IF NEW.unicef_id IS NULL THEN\n                NEW.unicef_id := format('IND-%s-%s',TO_CHAR(NEW.first_registration_date, 'yy'), trim(replace(to_char(NEW.unicef_id_index,'0000,0000'),',','.')));\n            END IF;\n            return NEW;\n        end\n        $$;\n        ",
            reverse_sql='',
        ),
        migrations.AlterField(
            model_name='household',
            name='residence_status',
            field=models.CharField(choices=[('', 'None'), ('IDP', 'Displaced  |  Internally Displaced People'), ('REFUGEE', 'Displaced  |  Refugee / Asylum Seeker'), ('OTHERS_OF_CONCERN', 'Displaced  |  Others of Concern'), ('HOST', 'Non-displaced  |   Host'), ('NON_HOST', 'Non-displaced  |   Non-host'), ('RETURNEE', 'Displaced  |   Returnee')], max_length=254, blank=True),
        ),
        migrations.AlterField(
            model_name='household',
            name='size',
            field=models.PositiveIntegerField(blank=True, db_index=True, null=True),
        ),
        migrations.RemoveConstraint(
            model_name='document',
            name='unique_for_individual_if_not_removed_and_valid',
        ),
        migrations.RemoveConstraint(
            model_name='document',
            name='unique_if_not_removed_and_valid',
        ),
        migrations.AddConstraint(
            model_name='document',
            constraint=models.UniqueConstraint(condition=models.Q(models.Q(('is_removed', False), ('status', 'VALID'), django.db.models.expressions.Func(django.db.models.expressions.F('type_id'), django.db.models.expressions.Value(True), function='check_unique_document_for_individual', output_field=models.BooleanField()))), fields=('individual', 'type', 'country', 'program'), name='unique_for_individual_if_not_removed_and_valid'),
        ),
        migrations.AddConstraint(
            model_name='document',
            constraint=models.UniqueConstraint(condition=models.Q(models.Q(('is_removed', False), ('status', 'VALID'))), fields=('document_number', 'type', 'country', 'program', 'is_original'), name='unique_if_not_removed_and_valid_for_representations'),
        ),
        migrations.AlterField(
            model_name='bankaccountinfo',
            name='is_original',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='document',
            name='is_original',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='entitlementcard',
            name='is_original',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='household',
            name='is_original',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='individual',
            name='is_original',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='individualidentity',
            name='is_original',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='individualroleinhousehold',
            name='is_original',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='bankaccountinfo',
            name='account_holder_name',
            field=models.CharField(blank=True, default='', max_length=255),
        ),
        migrations.AddField(
            model_name='bankaccountinfo',
            name='bank_branch_name',
            field=models.CharField(blank=True, default='', max_length=255),
        ),
        migrations.AddField(
            model_name='household',
            name='detail_id',
            field=models.CharField(blank=True, help_text='Kobo asset ID, Xlsx row ID, Aurora source ID', max_length=150, null=True),
        ),
        migrations.AddField(
            model_name='individual',
            name='detail_id',
            field=models.CharField(blank=True, help_text='Kobo asset ID, Xlsx row ID, Aurora source ID', max_length=150, null=True),
        ),
    ]
