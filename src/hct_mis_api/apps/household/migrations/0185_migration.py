# Generated by Django 3.2.25 on 2024-08-16 11:24

from django.db import migrations, models
import django.db.models.deletion
from django.db.models import Count, F, Subquery, OuterRef


def assign_individual_to_rdi(apps, schema_editor):
    RegistrationDataImport = apps.get_model("registration_data", "RegistrationDataImport")
    Individual = apps.get_model("household", "Individual")
    Program = apps.get_model("program", "Program")
    Household = apps.get_model("household", "Household")

    for program in Program.objects.all():
        # create RDI only if exists any individual without RDI
        individual_qs = Individual.objects.filter(
            program=program, registration_data_import__isnull=True, household__registration_data_import__isnull=True
        )
        aggregated_data = individual_qs.aggregate(
            individual_count=Count("id"), household_count=Count("household", distinct=True)
        )
        if aggregated_data["individual_count"] > 0:
            rdi = RegistrationDataImport.objects.create(
                name=f"RDI for Individuals [data migration for Programme: {program.name}]",
                status="MERGED",
                imported_by=None,
                data_source="XLS",
                number_of_individuals=aggregated_data["individual_count"],
                number_of_households=aggregated_data["household_count"],
                business_area=program.business_area,
                program_id=program.id,
                import_data=None,
            )

            individual_qs.update(registration_data_import_id=rdi.id)

    # assign RDI from Household
    household_rdi_subquery = Household.objects.filter(
        id=OuterRef("household_id"), registration_data_import__isnull=False
    ).values("registration_data_import_id")[:1]

    individual_qs = Individual.objects.filter(
        registration_data_import__isnull=True, household__registration_data_import__isnull=False
    ).annotate(household_rdi_id=Subquery(household_rdi_subquery))
    individual_qs.update(registration_data_import_id=F("household_rdi_id"))

    rdi_ids = individual_qs.values_list("household_rdi_id", flat=True).distinct()
    for rdi_id in rdi_ids:
        rdi = RegistrationDataImport.objects.get(id=rdi_id)
        rdi.refresh_population_statistics()


class Migration(migrations.Migration):

    dependencies = [
        ("registration_data", "0038_migration"),
        ("household", "0184_migration"),
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=[
                migrations.RunPython(
                    assign_individual_to_rdi,
                    migrations.RunPython.noop,
                ),
            ],
            state_operations=[
                migrations.AlterField(
                    model_name="individual",
                    name="registration_data_import",
                    field=models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="individuals",
                        to="registration_data.registrationdataimport",
                    ),
                ),
            ],
        ),
    ]
