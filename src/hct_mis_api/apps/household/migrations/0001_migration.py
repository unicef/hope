# Generated by Django 2.2.8 on 2020-04-29 08:18

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import model_utils.fields
import phonenumber_field.modelfields
import sorl.thumbnail.fields
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("core", "0001_migration"),
        ("registration_data", "0001_migration"),
    ]

    operations = [
        migrations.CreateModel(
            name="Agency",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=100)),
                ("label", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    model_utils.fields.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("document_number", models.CharField(blank=True, max_length=255)),
                ("photo", models.ImageField(blank=True, upload_to="")),
            ],
        ),
        migrations.CreateModel(
            name="DocumentType",
            fields=[
                (
                    "id",
                    model_utils.fields.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "country",
                    django_countries.fields.CountryField(blank=True, max_length=2),
                ),
                ("label", models.CharField(max_length=100)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DocumentValidator",
            fields=[
                (
                    "id",
                    model_utils.fields.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("regex", models.CharField(default=".*", max_length=100)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EntitlementCard",
            fields=[
                (
                    "id",
                    model_utils.fields.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("card_number", models.CharField(max_length=255)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "Active"),
                            ("ERRONEOUS", "Erroneous"),
                            ("CLOSED", "Closed"),
                        ],
                        default="ACTIVE",
                        max_length=10,
                    ),
                ),
                ("card_type", models.CharField(max_length=255)),
                ("current_card_size", models.CharField(max_length=255)),
                ("card_custodian", models.CharField(max_length=255)),
                ("service_provider", models.CharField(max_length=255)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Household",
            fields=[
                (
                    "id",
                    model_utils.fields.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "consent",
                    sorl.thumbnail.fields.ImageField(
                        upload_to="",
                        validators=[
                            django.core.validators.validate_image_file_extension
                        ],
                    ),
                ),
                (
                    "residence_status",
                    models.CharField(
                        choices=[
                            ("REFUGEE", "Refugee"),
                            ("MIGRANT", "Migrant"),
                            ("CITIZEN", "Citizen"),
                            ("IDP", "IDP"),
                            ("OTHER", "Other"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "country_origin",
                    django_countries.fields.CountryField(blank=True, max_length=2),
                ),
                (
                    "country",
                    django_countries.fields.CountryField(blank=True, max_length=2),
                ),
                ("size", models.PositiveIntegerField()),
                ("address", models.CharField(blank=True, max_length=255)),
                (
                    "geopoint",
                    django.contrib.gis.db.models.fields.PointField(
                        blank=True, null=True, srid=4326
                    ),
                ),
                ("female_age_group_0_5_count", models.PositiveIntegerField(default=0)),
                ("female_age_group_6_11_count", models.PositiveIntegerField(default=0)),
                (
                    "female_age_group_12_17_count",
                    models.PositiveIntegerField(default=0),
                ),
                ("female_adults_count", models.PositiveIntegerField(default=0)),
                ("pregnant_count", models.PositiveIntegerField(default=0)),
                ("male_age_group_0_5_count", models.PositiveIntegerField(default=0)),
                ("male_age_group_6_11_count", models.PositiveIntegerField(default=0)),
                ("male_age_group_12_17_count", models.PositiveIntegerField(default=0)),
                ("male_adults_count", models.PositiveIntegerField(default=0)),
                (
                    "female_age_group_0_5_disabled_count",
                    models.PositiveIntegerField(default=0),
                ),
                (
                    "female_age_group_6_11_disabled_count",
                    models.PositiveIntegerField(default=0),
                ),
                (
                    "female_age_group_12_17_disabled_count",
                    models.PositiveIntegerField(default=0),
                ),
                (
                    "female_adults_disabled_count",
                    models.PositiveIntegerField(default=0),
                ),
                (
                    "male_age_group_0_5_disabled_count",
                    models.PositiveIntegerField(default=0),
                ),
                (
                    "male_age_group_6_11_disabled_count",
                    models.PositiveIntegerField(default=0),
                ),
                (
                    "male_age_group_12_17_disabled_count",
                    models.PositiveIntegerField(default=0),
                ),
                ("male_adults_disabled_count", models.PositiveIntegerField(default=0)),
                ("returnee", models.BooleanField(default=False, null=True)),
                (
                    "flex_fields",
                    django.contrib.postgres.fields.jsonb.JSONField(default=dict),
                ),
                ("registration_date", models.DateField(null=True)),
                (
                    "admin_area",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.AdminArea",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Individual",
            fields=[
                (
                    "id",
                    model_utils.fields.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("individual_id", models.CharField(blank=True, max_length=255)),
                ("photo", models.ImageField(blank=True, upload_to="")),
                (
                    "full_name",
                    models.CharField(
                        max_length=255,
                        validators=[
                            django.core.validators.MinLengthValidator(3),
                            django.core.validators.MaxLengthValidator(255),
                        ],
                    ),
                ),
                ("given_name", models.CharField(blank=True, max_length=85)),
                ("middle_name", models.CharField(blank=True, max_length=85)),
                ("family_name", models.CharField(blank=True, max_length=85)),
                (
                    "relationship",
                    models.CharField(
                        blank=True,
                        choices=[
                            (
                                "NON_BENEFICIARY",
                                "Not a Family Member. Can only act as a recipient.",
                            ),
                            ("HEAD", "Head of household (self)"),
                            ("SON_DAUGHTER", "Son / Daughter"),
                            ("WIFE_HUSBAND", "Wife / Husband"),
                            ("BROTHER_SISTER", "Brother / Sister"),
                            ("MOTHER_FATHER", "Mother / Father"),
                            ("AUNT_UNCLE", "Aunt / Uncle"),
                            ("GRANDMOTHER_GRANDFATHER", "Grandmother / Grandfather"),
                            (
                                "MOTHERINLAW_FATHERINLAW",
                                "Mother-in-law / Father-in-law",
                            ),
                            ("DAUGHTERINLAW_SONINLAW", "Daughter-in-law / Son-in-law"),
                            (
                                "SISTERINLAW_BROTHERINLAW",
                                "Sister-in-law / Brother-in-law",
                            ),
                            ("GRANDDAUGHTER_GRANDSON", "Granddaughter / Grandson"),
                            ("NEPHEW_NIECE", "Nephew / Niece"),
                            ("COUSIN", "Cousin"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("PRIMARY", "Primary collector"),
                            ("ALTERNATE", "Alternate collector"),
                            ("NO_ROLE", "None"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "sex",
                    models.CharField(
                        choices=[("MALE", "Male"), ("FEMALE", "Female")], max_length=255
                    ),
                ),
                ("birth_date", models.DateField()),
                ("estimated_birth_date", models.BooleanField(default=False)),
                (
                    "marital_status",
                    models.CharField(
                        choices=[
                            ("SINGLE", "SINGLE"),
                            ("MARRIED", "Married"),
                            ("WIDOW", "Widow"),
                            ("DIVORCED", "Divorced"),
                            ("SEPARATED", "Separated"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "phone_no",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, region=None
                    ),
                ),
                (
                    "phone_no_alternative",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True, max_length=128, region=None
                    ),
                ),
                ("disability", models.BooleanField(default=False)),
                (
                    "flex_fields",
                    django.contrib.postgres.fields.jsonb.JSONField(default=dict),
                ),
                (
                    "household",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="individuals",
                        to="household.Household",
                    ),
                ),
                (
                    "registration_data_import",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="individuals",
                        to="registration_data.RegistrationDataImport",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="IndividualIdentity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number", models.CharField(max_length=255)),
                (
                    "agency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="individual_identities",
                        to="household.Agency",
                    ),
                ),
                (
                    "individual",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="identities",
                        to="household.Individual",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="HouseholdIdentity",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("document_number", models.CharField(max_length=255)),
                (
                    "agency",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="households_identities",
                        to="household.Agency",
                    ),
                ),
                (
                    "household",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="identities",
                        to="household.Household",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="household",
            name="head_of_household",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="heading_household",
                to="household.Individual",
            ),
        ),
    ]
