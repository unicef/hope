# Generated by Django 3.2.25 on 2024-07-04 11:24

from django.db import migrations, models

class Migration(migrations.Migration):

    dependencies = [
        ('household', '0182_migration'),
    ]

    operations = [
        migrations.RunSQL(
            """
                CREATE OR REPLACE FUNCTION generate_unique_program_registration_id()
                RETURNS TRIGGER AS $$
                DECLARE
                    new_id TEXT;
                    count INT := 0;
                BEGIN
                    -- Check if program_registration_id is empty
                    IF NEW.program_registration_id IS NULL OR NEW.program_registration_id = '' THEN
                        NEW.program_registration_id := NULL;  -- Convert empty string to NULL
                        RETURN NEW;  -- Do not modify with increasing number
                    END IF;
                    new_id := NEW.program_registration_id || '#0';  -- Initial attempt with #0
                    LOOP
                        IF NOT EXISTS (SELECT 1 FROM household_household WHERE program_registration_id = new_id) THEN
                            EXIT;
                        END IF;
                        count := count + 1;
                        new_id := NEW.program_registration_id || '#' || count;
                    END LOOP;
                    NEW.program_registration_id := new_id;
                    RETURN NEW;
                END;
                $$ LANGUAGE plpgsql;
                
                CREATE TRIGGER unique_program_registration_id_trigger
                BEFORE INSERT OR UPDATE ON household_household
                FOR EACH ROW
                EXECUTE FUNCTION generate_unique_program_registration_id();
            """,
            reverse_sql="""
                DROP TRIGGER IF EXISTS unique_program_registration_id_trigger ON household_household;
                DROP FUNCTION IF EXISTS generate_unique_program_registration_id();
            """
        ),
    ]
