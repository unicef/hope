[tox]
requires =
    tox>=4.2
    tox-gh-actions
    tox-uv>=1.20.2
env_list =
    lint
    d{32}-py{313}
skip_missing_interpreters = true

[testenv]
base_python = python3.13
deps =
    d32: django==3.2.*
pass_env =
    GDAL_LIBRARY_PATH
    GEOS_LIBRARY_PATH
    PYTHONBREAKPOINT
    PYTHONDONTWRITEBYTECODE
set_env =
    CACHE_ENABLED = false
    CACHE_LOCATION = redis://localhost:6379/1
    CELERY_BROKER_URL = redis://localhost:6379/0
    CELERY_RESULT_BACKEND = redis://localhost:6379/0
    CELERY_TASK_ALWAYS_EAGER = true
    CONSTANCE_REDIS_CONNECTION = redis://localhost:6379/0
    DATABASE_URL = postgres://postgres:postgres@localhost:5432/postgres
    DATA_VOLUME = {toxinidir}/data
    DEBUG = true
    ELASTICSEARCH_HOST = http://localhost:9200
    ELASTICSEARCH_SYNONYMS_FILE = {toxinidir}/src/data/synonyms.txt
    ENV = dev
    PROJECT_ROOT = {toxinidir}/src/hope
    PYTHONUNBUFFERED = 1
    REP_DATABASE_URL = postgres://postgres:postgres@localhost:5432/postgres
    SECRET_KEY = secretkey
    TESTS_ROOT = {toxinidir}/tests/unit
    USE_DUMMY_EXCHANGE_RATES = yes

[testenv:lint]
description = run static analysis and style check using ruff
skip_install = true
deps =
    pre-commit-uv
pass_env =
    HOMEPATH
commands =
    pre-commit run --all-files --show-diff-on-failure

[testenv:unit]
runner = uv-venv-lock-runner
description = Run unit tests
pass_env =
    GDAL_LIBRARY_PATH
    GEOS_LIBRARY_PATH
    PYTHONBREAKPOINT
    PYTHONDONTWRITEBYTECOD
set_env =
    {[testenv]set_env}
    PYTHONWARNINGS = ignore
commands =
    pytest \
      --no-migrations \
      -q \
      -rfE \
      --no-header \
      --tb=short \
      --randomly-seed=42 \
      --create-db \
       {posargs: tests/unit}
dependency_groups = dev

[testenv:selenium]
runner = uv-venv-lock-runner
description = Run selenium tests
set_env =
    CACHE_ENABLED = false
    CACHE_LOCATION = redis://localhost:6379/1
    CELERY_BROKER_URL = redis://localhost:6379/0
    CELERY_RESULT_BACKEND = redis://localhost:6379/0
    CELERY_TASK_ALWAYS_EAGER = true
    CONSTANCE_REDIS_CONNECTION = redis://localhost:6379/0
    DATABASE_URL = postgres://postgres:postgres@localhost:5432/postgres
    DATA_VOLUME = {toxinidir}/data
    DEBUG = true
    ELASTICSEARCH_HOST = http://localhost:9200
    ELASTICSEARCH_SYNONYMS_FILE = {toxinidir}/src/data/synonyms.txt
    ENV = dev
    OUTPUT_DATA_ROOT = {toxinidir}/tests/selenium/output_data
    PROJECT_ROOT = {toxinidir}/src/hope
    PYTHONUNBUFFERED = 1
    REP_DATABASE_URL = postgres://postgres:postgres@localhost:5432/postgres
    SECRET_KEY = secretkey
    TESTS_ROOT = {toxinidir}/tests/selenium
    TESTS_ROOT = {toxinidir}/tests/unit
    USE_DUMMY_EXCHANGE_RATES = yes
commands =
    pytest \
      --no-migrations \
      -q \
      -rfE \
      --no-header \
      --tb=short \
      --randomly-seed=42 \
      --create-db \
      --reruns 3 \
      --reruns-delay 1 \
      --dist loadscope \
      {posargs:} \
      ./tests/e2e
dependency_groups = dev

[testenv:mypy]
runner = uv-venv-lock-runner
description = run mypy type checking
commands =
    mypy src
dependency_groups = dev

[testenv:clean]
runner = uv-venv-lock-runner
commands =
    ruff check --fix src tests
    ruff format src tests

[testenv:pytest]
runner = uv-venv-lock-runner
description = Run unit tests
pass_env =
    GDAL_LIBRARY_PATH
    GEOS_LIBRARY_PATH
    PYTHONBREAKPOINT
    PYTHONDONTWRITEBYTECODE
set_env =
    {[testenv]set_env}
    PYTHONWARNINGS = ignore
commands =
    pytest \
      --no-migrations \
      -q \
      -rfE \
      --no-header \
      --tb=short \
      --randomly-seed=42 \
      --create-db \
      --cov-report= \
      {posargs: ./tests/unit}
dependency_groups = dev
